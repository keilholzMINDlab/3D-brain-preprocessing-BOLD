function [BW,maskedImage] = segmentImage3D(X,BW)
% BW=mask_final;
% X=squeeze(images_rot(:,:,:,1));
iz=size(X,3);
%segmentImage Segment image using auto-generated code from imageSegmenter App
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter App. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 27-Oct-2017
%----------------------------------------------------


% Create empty mask.
% BW = false(size(X,1),size(X,2));
% 
% % Ellipse drawing
% xPos = [46.0385 45.7233 44.7240 42.9284 40.2784 36.8765 33.0275 29.1785 25.7765 23.1266 21.3309 20.3316 20.0165 20.3316 21.3309 23.1266 25.7765 29.1785 33.0275 36.8765 40.2784 42.9284 44.7240 45.7233 46.0385];
% yPos = [34.7857 36.2729 37.7635 39.1965 40.4306 41.2800 41.5842 41.2800 40.4306 39.1965 37.7635 36.2729 34.7857 33.2985 31.8079 30.3749 29.1408 28.2915 27.9872 28.2915 29.1408 30.3749 31.8079 33.2985 34.7857];
% m = size(BW, 1);
% n = size(BW, 2);
% addedRegion = poly2mask(xPos, yPos, m, n);
% BW = BW | addedRegion;

slice_select=2;
%% mannually drawed eliptic mask
figure('Name','Image Segmentation 3D','NumberTitle','off');
i=1;
subplot(2,8,i)
imagesc(X(:,:,slice_select));

% BW=[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false;false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false;false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false;false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false;false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false;false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false;false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false;false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false;false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false;false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false;false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false;false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];

% Active contour using Chan-Vese over 100 iterations
iterations = 20;
BW = activecontour(X, BW, iterations, 'Chan-Vese');
% Clear borders
for iz=1:iz
    BW_slice = imclearborder(BW(:,:,iz));
    BW(:,:,iz)=BW_slice;
% BW = activecontour(X, BW, 10, 'Chan-Vese');
end
% % Close borders %%added by Nan Xu 08/07/2019
se = strel('sphere',3);
BW = imclose(BW,se);

i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Invert mask
BW = imcomplement(BW);

% Close borders %%added by Nan Xu 08/07/2019
% se = strel('disk',5);
% BW = imclose(BW,se);

i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Active contour using edge over 100 iterations
iterations = 20;
for iz=1:iz
    BW_slice = activecontour(X(:,:,iz), BW(:,:,iz), iterations, 'edge');
    BW(:,:,iz)=BW_slice;
% BW = activecontour(X, BW, 10, 'Chan-Vese');
end
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Invert mask
BW = imcomplement(BW);
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% % Clear borders
for iz=1:iz
    BW_slice = imclearborder(BW(:,:,iz));
    BW(:,:,iz)=BW_slice;
% BW = activecontour(X, BW, 10, 'Chan-Vese');
end
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));
% Invert mask
BW = imcomplement(BW);
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Active contour using edge over 100 iterations
iterations = 20;
% BW = activecontour(X, BW, iterations, 'edge');
for iz=1:iz
    BW_slice = activecontour(X(:,:,iz), BW(:,:,iz), iterations, 'edge');
    BW(:,:,iz)=BW_slice;
% BW = activecontour(X, BW, 10, 'Chan-Vese');
end
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Invert mask
BW = imcomplement(BW);
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Clear borders
for iz=1:iz
    BW_slice = imclearborder(BW(:,:,iz));
    BW(:,:,iz)=BW_slice;
% BW = activecontour(X, BW, 10, 'Chan-Vese');
end
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Invert mask
BW = imcomplement(BW);
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Active contour using edge over 100 iterations
iterations = 20;
for iz=1:iz
    BW_slice = activecontour(X(:,:,iz), BW(:,:,iz), iterations, 'edge');
    BW(:,:,iz)=BW_slice;
% BW = activecontour(X, BW, 10, 'Chan-Vese');
end
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Invert mask
BW = imcomplement(BW);
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% % Clear borders
for iz=1:iz
    BW_slice = imclearborder(BW(:,:,iz));
    BW(:,:,iz)=BW_slice;
% BW = activecontour(X, BW, 10, 'Chan-Vese');
end
% i=i+1;
% subplot(2,8,i)
% imagesc(BW(:,:,slice_select));

% Dilate mask with disk
radius = 4; se = strel('sphere', radius); BW = imdilate(BW, se);
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));

% Erode mask with disk
radius = 4; se = strel('sphere', radius); BW = imerode(BW, se);      
i=i+1;
subplot(2,8,i)
imagesc(BW(:,:,slice_select));



% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
i=i+1;
subplot(2,8,i)
imagesc(maskedImage(:,:,slice_select));